USE WAREHOUSE LEOPARD_WH;
USE DATABASE UCM;
USE SCHEMA SMART_DESK;

-- En primer lugar analizaremos nuestras tablas al completo para tener conocimiento de las caracteristicas de nuestros conjuntos de datos.

SELECT *
FROM SALES;

SELECT *
FROM ACCOUNTS;

SELECT *
FROM FORECASTS;



-- 1. Análisis completo de ventas y beneficio por producto

SELECT 
        CATEGORY, 
        SUM(PRODUCT) AS PRODUCTO, 
        SUM(MAINTENANCE) AS MANTENIMIENTO, 
        SUM(PARTS) AS PARTES, 
        SUM(SUPPORT) AS SOPORTE, 
        SUM(PROFIT) AS BENEFICIO_TOTAL,
        ROUND(AVG(PROFIT), 2) AS BENEFICIO_PROMEDIO,
        SUM(UNITS_SOLD) AS UNIDADES_VENDIDAS
FROM SALES
WHERE (YEAR=2020) AND (ACCOUNT='Abbot Industries')
GROUP BY CATEGORY;



-- 2. Cálculo de pronóstico total y beneficio esperado

SELECT  
        COALESCE(F.CATEGORY, S.CATEGORY) AS CATEGORIA,
        SUM(CASE WHEN QUARTER='2020 Q1' THEN PROFIT ELSE 0 END) AS BENEFICIO_Q1_2020,
        SUM(CASE WHEN QUARTER='2021 Q3' THEN PROFIT ELSE 0 END) AS BENEFICIO_Q3_2021,
        SUM(CASE WHEN F.YEAR='2022' THEN FORECAST_PROFIT ELSE 0 END) AS BENEFICIO_ESPERADO_2022,
        IFNULL (MIN(OPPORTUNITY_AGE),0) AS MAS_RECIENTE,
        IFNULL (MAX(OPPORTUNITY_AGE),0) AS MAS_ANTIGUA 

FROM SALES AS S FULL JOIN FORECASTS AS F
ON S.YEAR=F.YEAR AND S.CATEGORY=F.CATEGORY
GROUP BY CATEGORIA
ORDER BY CATEGORIA;




-- 3. Comparación de ventas, unidades vendidas y beneficio entre industrias en APAC y EMEA

SELECT  
        REGION,
        INDUSTRY, 
        COUNTRY,
        SUM(PRODUCT) AS PRODUCTO, 
        SUM(PROFIT) AS BENEFICIO,
        ROUND(AVG(PROFIT),2) AS BENEFICIO_PROMEDIO, 
        SUM(UNITS_SOLD) AS UNIDADES_VENDIDAS

FROM SALES AS S INNER JOIN ACCOUNTS AS A
ON S.ACCOUNT=A.ACCOUNT
WHERE REGION='APAC' OR REGION='EMEA'
GROUP BY INDUSTRY, COUNTRY, REGION
ORDER BY REGION, INDUSTRY, COUNTRY;



-- 4. Beneficio por tipo de empresa DUDA CON SI SE REFIERE A BENEFICIO DE LA PRIMERA TABLA

SELECT  
        INDUSTRY,
        SUM(FORECAST_PROFIT) AS INGRESO_FUTURO_TOTAL,
        CASE
            WHEN INGRESO_FUTURO_TOTAL>=500000 AND INGRESO_FUTURO_TOTAL<=1000000 THEN 'Beneficio normal'
            WHEN INGRESO_FUTURO_TOTAL>1000000 THEN 'Beneficio alto'
            ELSE 'No hay registros'
        END AS TIPO_DE_BENEFICIO

FROM FORECASTS AS F INNER JOIN ACCOUNTS AS A
ON (F.ACCOUNT=A.ACCOUNT)
WHERE F.ACCOUNT IN (SELECT ACCOUNT 
                    FROM FORECASTS 
                    WHERE FORECAST_PROFIT>500000)
GROUP BY INDUSTRY;



-- 5. Beneficio acumulado por trimestre particionado por industria

SELECT 
        INDUSTRY,
        QUARTER_OF_YEAR, 
        SUM(PROFIT) AS BENEFICIO_TOTAL,
        SUM(SUM(PROFIT)) OVER (PARTITION BY INDUSTRY ORDER BY QUARTER_OF_YEAR) AS BENEFICIO_ACUMULADO,
        SUM(SUM(FORECAST_PROFIT)) OVER (PARTITION BY INDUSTRY ORDER BY QUARTER_OF_YEAR) AS FORECAST_ACUMULADO,
        MIN(OPPORTUNITY_AGE) AS MAS_RECIENTE,
        MAX(OPPORTUNITY_AGE) AS MAS_ANTIGUA

FROM ACCOUNTS AS A 
INNER JOIN SALES AS S
ON (A.ACCOUNT=S.ACCOUNT) 
INNER JOIN FORECASTS AS F
ON (A.ACCOUNT=F.ACCOUNT)
GROUP BY INDUSTRY,QUARTER_OF_YEAR
ORDER BY INDUSTRY, QUARTER_OF_YEAR;



-- CASO PRACTICO. 
-- A. Beneficio segun el ejecutivo que gestiona la relacion con el cliente.

SELECT 
    A.ACCOUNT_EXECUTIVE,
    SUM(CASE WHEN S.YEAR = 2019 THEN S.PROFIT ELSE 0 END) AS BENEFICIO_2019,
    SUM(CASE WHEN S.YEAR = 2020 THEN S.PROFIT ELSE 0 END) AS BENEFICIO_2020,
    SUM(CASE WHEN S.YEAR = 2021 THEN S.PROFIT ELSE 0 END) AS BENEFICIO_2021,
    IFNULL(SUM(F.FORECAST_PROFIT), 0) AS INGRESOS_ESPERADOS_2022,  
    ROUND(
        CASE 
            WHEN BENEFICIO_2021 = 0 AND INGRESOS_ESPERADOS_2022>0 THEN 100
            WHEN BENEFICIO_2021 = 0 AND INGRESOS_ESPERADOS_2022=0 THEN 0
            ELSE 
             (INGRESOS_ESPERADOS_2022 - BENEFICIO_2021) / BENEFICIO_2021 * 100
        END,1) AS VARIACION_PORCENTUAL_21_22,
        
    CASE 
        WHEN VARIACION_PORCENTUAL_21_22 >= 50 AND (BENEFICIO_2019+BENEFICIO_2020+BENEFICIO_2021) >= 3000000 THEN 'PROMOCIONA'
        WHEN VARIACION_PORCENTUAL_21_22 >= 50 OR (BENEFICIO_2019+BENEFICIO_2020+BENEFICIO_2021) >= 3000000 THEN 'CONTINUA'
        ELSE 'DESPEDIDO'
    END AS RECURSOS_HUMANOS
        
FROM ACCOUNTS AS A
INNER JOIN SALES AS S
    ON A.ACCOUNT = S.ACCOUNT
LEFT JOIN FORECASTS AS F
    ON A.ACCOUNT = F.ACCOUNT
    
GROUP BY A.ACCOUNT_EXECUTIVE
ORDER BY A.ACCOUNT_EXECUTIVE;

-- B. Paises donde la empresa debe fomentar su crecimiento.

SELECT 
    COUNTRY,
    SUM(CASE WHEN S.YEAR = 2019 THEN S.PROFIT ELSE 0 END) AS BENEFICIO_2019,
    SUM(CASE WHEN S.YEAR = 2020 THEN S.PROFIT ELSE 0 END) AS BENEFICIO_2020,
    SUM(CASE WHEN S.YEAR = 2021 THEN S.PROFIT ELSE 0 END) AS BENEFICIO_2021,
    IFNULL(SUM(F.FORECAST_PROFIT), 0) AS INGRESOS_ESPERADOS_2022,  
    CASE
        WHEN (BENEFICIO_2019 <= BENEFICIO_2020 AND BENEFICIO_2020 <= BENEFICIO_2021) 
        THEN 'APTO'
        ELSE 'NO APTO'
    END AS CRECIMIENTO_19_20_21,
    CASE
        WHEN  (INGRESOS_ESPERADOS_2022 <= BENEFICIO_2021)
        THEN 'APTO'
        ELSE 'NO APTO'
    END AS PREVISION_CRECIMIENTO_21_22,
    CASE 
        WHEN (CRECIMIENTO_19_20_21='APTO') AND (PREVISION_CRECIMIENTO_21_22='APTO')
        THEN 'ACTIVAR CAMPAÑA'
        ELSE 'CAMPAÑA DENEGADA'
    END AS PUBLICIDAD

FROM ACCOUNTS AS A
LEFT JOIN SALES AS S
    ON A.ACCOUNT = S.ACCOUNT
LEFT JOIN FORECASTS AS F
    ON A.ACCOUNT = F.ACCOUNT
GROUP BY A.COUNTRY
ORDER BY A.COUNTRY;
